),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnPGV
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnsaAvg
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnCAV
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnSI
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnASI
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
#dat = read.csv('data/Inputs_for_s4_96x48_high_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s4_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to75']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
lnIM = lnsaT1
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnPGA
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnPGV
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnPGV
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, k=6) + s(magnitude, k=6) + s(Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnsaAvg
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnCAV
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnSI
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
lnIM = lnASI
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, k=6) + s(lnIM, Rjb, k=6)
),
family = mvn(d = 16))
summary(fit)
fit <- gam(list(as.matrix(log(dat['story_1_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_sdrZ'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, magnitude, Rjb, k=4),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, magnitude, Rjb, k=4)
),
family = mvn(d = 16))
summary(fit)
