######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 8))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
#dat = read.csv('data/Inputs_for_s2_48x32_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s2_48x32_veryhigh_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s2_96x48_high_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s2_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 8))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
dat = read.csv('data/Inputs_for_s1_48x32_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_48x32_veryhigh_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
library(dplyr)
library(mgcv)
dat = read.csv('data/Inputs_for_s1_48x32_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_48x32_veryhigh_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
library(dplyr)
library(mgcv)
library(MASS)
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
#dat = read.csv('data/Inputs_for_s1_48x32_high_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s1_48x32_veryhigh_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
#dat = read.csv('data/Inputs_for_s1_48x32_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_48x32_veryhigh_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s1_96x48_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
#dat = read.csv('data/Inputs_for_s1_48x32_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_48x32_veryhigh_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s1_96x48_high_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s1_96x48_veryhigh_avg_EDP.csv', header = TRUE)
magnitude = read.table('data/Magnitude.txt', header=FALSE)
Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
magnitude = as.matrix(magnitude)
Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 4))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
library(dplyr)
library
library(MASS)
library(dplyr)
library(mgcv)
library(MASS)
#dat = read.csv('data/Inputs_for_s4_96x48_high_avg_EDP.csv', header = TRUE)
dat = read.csv('data/Inputs_for_s4_96x48_veryhigh_avg_EDP.csv', header = TRUE)
#magnitude = read.table('data/Magnitude.txt', header=FALSE)
#Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
#magnitude = as.matrix(magnitude)
#Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_3_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_3_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_4_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_4_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 16))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
dat = read.csv('data/Inputs_for_s4_96x48_high_avg_EDP.csv', header = TRUE)
#dat = read.csv('data/Inputs_for_s4_96x48_veryhigh_avg_EDP.csv', header = TRUE)
#magnitude = read.table('data/Magnitude.txt', header=FALSE)
#Rjb = read.table('data/Distance_Rjb.txt', header = FALSE)
columns = colnames(dat)
head(dat)
ln_sdrX = as.matrix(log(dat['story_1_sdrX']))
ln_pfaX = as.matrix(log(dat['story_1_pfaX']))
######## The list of IMs used ##############
lnsaT1 = as.matrix(log(dat['SaT1']))
lnPGA = log(as.matrix(dat['PGA']))
lnPGV = log(as.matrix(dat['PGV']))
lnsaAvg = log(as.matrix(dat['Sa_avg']))
lnCAV = log(as.matrix(dat['CAV']))
lnSI = log(as.matrix(dat['SI']))
lnASI = log(as.matrix(dat['ASI']))
lnDSI = log(as.matrix(dat['DSI']))
lnDS_5to75 = log(as.matrix(dat['DS_5to75']))
lnDS_5to95 = log(as.matrix(dat['DS_5to95']))
#magnitude = as.matrix(magnitude)
#Rjb = as.matrix(log(Rjb))
im_list = list(lnsaT1, lnPGA, lnPGV, lnsaAvg, lnCAV, lnSI, lnASI, lnDSI, lnDS_5to75, lnDS_5to95)
sdr_eff = c()
pfa_eff = c()
entropy_eff = c()
for (x in im_list) {
lnIM = x
fit <- gam(list(as.matrix(log(dat['story_1_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_1_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_1_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_2_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_2_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_3_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_3_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_3_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_3_pfaZ'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_4_sdrX']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_4_sdrZ']))  ~ s(lnIM, k=6) ,
as.matrix(log(dat['story_4_pfaX'])) ~ s(lnIM, k = 6),
as.matrix(log(dat['story_4_pfaZ'])) ~ s(lnIM, k = 6)
),
family = mvn(d = 16))
#summary(fit)
# estimated cov matrix between SDR and PFA
cov <- solve(crossprod(fit$family$data$R))
std = sqrt(diag(cov))
sdr_std = std[c(TRUE, TRUE, FALSE, FALSE)]
pfa_std = std[c(FALSE, FALSE, TRUE, TRUE)]
sdr_eff = c(sdr_eff, c(mean(sdr_std)))
pfa_eff = c(pfa_eff, c(mean(pfa_std)))
entropy_eff = c(entropy_eff, c(0.5*log((2*pi*exp(1))^dim(cov)[1] * det(cov))))
}
#sdr_eff
#pfa_eff
entropy_eff
write.matrix(entropy_eff, file='mat.csv')
